// Code generated by protoc-gen-go.
// source: prometheus.proto
// DO NOT EDIT!

package model

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Label struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Val              *string `protobuf:"bytes,2,opt,name=val" json:"val,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Label) Reset()         { *m = Label{} }
func (m *Label) String() string { return proto.CompactTextString(m) }
func (*Label) ProtoMessage()    {}

func (m *Label) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Label) GetVal() string {
	if m != nil && m.Val != nil {
		return *m.Val
	}
	return ""
}

// Prometheus clients are expected to produce a varint-encoded length-delimited
// massage stream.
//
// Clients are also encouraged to provide a human-accessible endpoint
// which displays the samples it is emitting, as well as some
// documentation about what the values represent.
type Sample struct {
	Name  *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *float64 `protobuf:"fixed64,2,opt,name=value" json:"value,omitempty"`
	// Optional timestamp, in seconds since the epoch.
	//
	// By default, samples are timestamped by a prometheus server at the time of
	// collection.
	//
	// Certain clients, however, may want to provide their own time for a sample.
	// For example, a client which polls an external resource on certain
	// invtervals to produce samples may wish to assign the time of the last poll
	// to its samples.
	Time             *int64   `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
	Label            []*Label `protobuf:"bytes,4,rep,name=label" json:"label,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Sample) Reset()         { *m = Sample{} }
func (m *Sample) String() string { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()    {}

func (m *Sample) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Sample) GetValue() float64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *Sample) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Sample) GetLabel() []*Label {
	if m != nil {
		return m.Label
	}
	return nil
}

func init() {
}
